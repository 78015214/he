{"remainingRequest":"/home/py/he/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/py/he/src/page/index.vue?vue&type=template&id=277d1ceb&scoped=true&","dependencies":[{"path":"/home/py/he/src/page/index.vue","mtime":1583428311199},{"path":"/home/py/he/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/py/he/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/py/he/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/py/he/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
    <div class="shortcut ">
        <div class="Stripe">
            <ul class="City">
                <li class="ho_ver base-li">
                    <a class="ditu" href="#">
                        <i class="tu_biao iconfont iconditu-dibiao"></i>
                        <span class="ui-areamini-text">广东</span>
                    </a>
                    <div class="dd">
                        <div class="region box2">
                            <div class="reg_ion"><a href="">北京</a></div>
                            <div class="reg_ion"><a href="">上海</a></div>
                            <div class="reg_ion"><a href="">天津</a></div>
                            <div class="reg_ion"><a href="">重庆</a></div>
                            <div class="reg_ion"><a href="">河北</a></div>
                            <div class="reg_ion"><a href="">山西</a></div>
                            <div class="reg_ion"><a href="">辽宁</a></div>
                            <div class="reg_ion"><a href="">吉林</a></div>
                            <div class="reg_ion"><a href="">黑龙江</a></div>
                            <div class="reg_ion"><a href="">河南</a></div>

                        </div>
                        <div class="areamini_inter">
                            <p class="areamini_inter_desc">地区专享版本</p>
                            <a class="aa">
                                <div class="areamini_inter_name">中國港澳</div>
                            </a>
                        </div>
                        <div></div>
                    </div>
                </li>
            </ul>
            <ul class="fr">
                <li>
                    <a class="dl" target="_blank">你好, 请登录</a>
                    <a class="link-recgit color cover" target="_blank">免费注册</a>
                </li>
                <li class="Vertical"></li>
                <li>
                    <div class="dt">
                        <a target="_blank">我的订单</a>
                    </div>
                </li>
                <li class="Vertical"></li>
                <li class="base-li hd">
                    <div class="re_f">
                        <a hretarget="_blank">我的京东</a>
                        <i class="size iconfont iconxiala1"></i>
                    </div>
                    <div class="jd">
                        <div class="wd"><a href="">待处理订单</a></div>
                        <div class="wd"><a href="">消息</a></div>
                        <div class="wd"><a href="">返回退换货</a></div>
                        <div class="wd"><a href="">我的问答</a></div>
                        <div class="wd"><a href="">商品降价</a></div>
                        <div class="wd"><a href="">我的关注</a></div>
                        <div class="Line"></div>
                        <div class="Underside">
                            <div class="within">
                                <div class="wd"><a href="">我的京东</a></div>
                                <div class="wd"><a href="">我的优惠券</a></div>
                                <div class="wd"><a href="">我的白条</a></div>
                                <div class="wd"><a href="">我的理财</a></div>
                            </div>

                        </div>

                    </div>
                </li>
                <li class="Vertical hy"></li>
                <li>
                    <div>
                        <a class="_a" target="_blank">京东会员</a>
                    </div>
                </li>
                <li class="Vertical hy"></li>
                <li class="base-li h_v">
                    <div class="hv">
                        <a class="cg" target="_blank">企业采购</a>
                        <i class="size iconfont iconxiala1"></i>
                    </div>
                    <div class="dd_b">
                        <div class="dd_c">
                            <div class="w_d"><a href="">企业购</a></div>
                            <div class="w_d"><a href="">商用场景馆</a></div>
                            <div class="w_d"><a href="">工业品</a></div>
                            <div class="w_d"><a href="">礼品卡</a></div>
                        </div>

                    </div>
                </li>
                <li class="Vertical hy"></li>
                <li>
                    <div>
                        <a target="_blank">客户服务</a>
                        <i class="size iconfont iconxiala1"></i>
                    </div>
                </li>
                <li class="Vertical hy"></li>
                <li>
                    <div>
                        <a target="_blank">网站导航</a>
                        <i class="size iconfont iconxiala1"></i>
                    </div>
                </li>
                <li class="Vertical hy"></li>
                <li>
                    <div>
                        <a target="_blank">手机京东</a>

                    </div>
                </li>
            </ul>
        </div>
        <div id="header">
            <div class="w">
                <div class="logo">
                    <a class="ha" href="">
                        <img class="im_g" src="../assets/imgs/jd.gif" alt="">
                    </a>
                </div>
                <div class="form">
                    <div class="search_bg">小狗吸尘器</div>
                    <input type="text" class="text">
                    <button class="btn">
                        <i class="iconfont iconsousuo s_ou"></i>
                    </button>
                </div>
                <div id="hotwords">
                    <a class="style-red">美味狂欢购</a>
                    <a target="_blank" data-idx="1">小家电</a>
                    <a clstag="h|keycount|head|search_d03">健康用车</a>
                    <a clstag="h|keycount|head|search_d04">无抗养殖</a>
                    <a data-idx="4" clstag="h|keycount|head|search_d05">暖春行动</a>
                    <a data-idx="5" clstag="h|keycount|head|search_d06">9.9元</a>
                    <a target="_blank" data-idx="6" clstag="h|keycount|head|search_d07">提升免疫</a>
                    <a data-idx="7" clstag="h|keycount|head|search_d08">低至9.9</a>
                    <a data-idx="8" clstag="h|keycount|head|search_d09">每100-50</a></div>
                <div id="navitems">
                    <ul id="navitems-group1">
                        <li class="fore1">
                            <a class="navitems-lk">秒杀</a>
                        </li>
                        <li class="fore2">
                            <a class="navitems-lk">优惠券</a>
                        </li>
                        <li class="fore3">
                            <a class="navitems-lk">PLUS会员</a>
                        </li>
                        <li class="fore4">
                            <a class="navitems-lk">品牌闪购</a>
                        </li>
                        <li class="fore5">
                            <a class="navitems-lk">拍卖</a>
                        </li>
                        <li class="fore6">
                            <a class="navitems-lk">京东家电</a>
                        </li>
                        <li class="fore7">
                            <a class="navitems-lk">京东超市</a>
                        </li>
                        <li class="fore8">
                            <a class="navitems-lk">京东生鲜</a>
                        </li>
                        <li class="fore9">
                            <a class="navitems-lk">京东国际</a>
                        </li>
                        <li class="fore10">
                            <a class="navitems-lk">京东金融</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="fs ">
            <div class="grid_c1 fs_inner box2">
                <div class="fs_col1">
                    <div id="J_cate" class="cate J_cate cate18">
                        <ul class="JS_navCtn cate_menu">
                            <li class="cate_menu_item" data-index="1" clstag="h|keycount|head|category_01a">
                                <a target="_blank" class="cate_menu_lk" href="//jiadian.jd.com">家用电器</a>
                            </li>
                            <li class="cate_menu_item" data-index="2" clstag="h|keycount|head|category_02a">
                                <a target="_blank" class="cate_menu_lk" href="//shouji.jd.com/">手机</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//wt.jd.com">运营商</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//shuma.jd.com/">数码</a>
                            </li>
                            <li class="cate_menu_item" data-index="3" clstag="h|keycount|head|category_03a">
                                <a target="_blank" class="cate_menu_lk" href="//diannao.jd.com/">电脑</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//bg.jd.com">办公</a>
                            </li>
                            <li class="cate_menu_item" data-index="4" clstag="h|keycount|head|category_04a">
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/home.html">家居</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/furniture.html">家具</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//jzjc.jd.com/">家装</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/kitchenware.html">厨具</a>
                            </li>
                            <li class="cate_menu_item" data-index="5" clstag="h|keycount|head|category_05a">
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/1315-1342.html">男装</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/1315-1343.html">女装</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//phat.jd.com/10-156.html">童装</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/1315-1345.html">内衣</a>
                            </li>
                            <li class="cate_menu_item" data-index="6" clstag="h|keycount|head|category_06a">
                                <a target="_blank" class="cate_menu_lk" href="//beauty.jd.com/">美妆</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/beauty.html">个护清洁</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/pet.html">宠物</a>
                            </li>
                            <li class="cate_menu_item cate_menu_item_on" data-index="7"
                                clstag="h|keycount|head|category_07a">
                                <a target="_blank" class="cate_menu_lk" href="//phat.jd.com/10-184.html">女鞋</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//phat.jd.com/10-183.html">箱包</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/watch.html">钟表</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/jewellery.html">珠宝</a>
                            </li>
                            <li class="cate_menu_item" data-index="8" clstag="h|keycount|head|category_08a">
                                <a target="_blank" class="cate_menu_lk" href="//phat.jd.com/10-185.html">男鞋</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//phat.jd.com/10-109.html">运动</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/outdoor.html">户外</a>
                            </li>
                            <li class="cate_menu_item" data-index="9" clstag="h|keycount|head|category_09a">
                                <a target="_blank" class="cate_menu_lk" href="//xinfang.jd.com/">房产</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//car.jd.com/">汽车</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//che.jd.com/">汽车用品</a>
                            </li>
                            <li class="cate_menu_item" data-index="10" clstag="h|keycount|head|category_10a">
                                <a target="_blank" class="cate_menu_lk" href="//baby.jd.com">母婴</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//toy.jd.com/">玩具乐器</a>
                            </li>
                            <li class="cate_menu_item" data-index="11" clstag="h|keycount|head|category_11a">
                                <a target="_blank" class="cate_menu_lk" href="//food.jd.com/">食品</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//jiu.jd.com">酒类</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//fresh.jd.com">生鲜</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//china.jd.com">特产</a>
                            </li>
                            <li class="cate_menu_item" data-index="12" clstag="h|keycount|head|category_12a">
                                <a target="_blank" class="cate_menu_lk" href="//art.jd.com">艺术</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/1672-2599.html">礼品鲜花</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//nong.jd.com">农资绿植</a>
                            </li>
                            <li class="cate_menu_item" data-index="13" clstag="h|keycount|head|category_13a">
                                <a target="_blank" class="cate_menu_lk" href="//health.jd.com">医药保健</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//channel.jd.com/9192-9196.html">计生情趣</a>
                            </li>
                            <li class="cate_menu_item" data-index="14" clstag="h|keycount|head|category_14a">
                                <a target="_blank" class="cate_menu_lk" href="//book.jd.com/">图书</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//mvd.jd.com/">文娱</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//education.jd.com">教育</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//e.jd.com/ebook.html">电子书</a>
                            </li>
                            <li class="cate_menu_item" data-index="15" clstag="h|keycount|head|category_15a">
                                <a target="_blank" class="cate_menu_lk" href="//jipiao.jd.com/">机票</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//hotel.jd.com/">酒店</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//trip.jd.com/">旅游</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//ish.jd.com/">生活</a>
                            </li>
                            <li class="cate_menu_item" data-index="16" clstag="h|keycount|head|category_16a">
                                <a target="_blank" class="cate_menu_lk" href="//licai.jd.com/">理财</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//z.jd.com/">众筹</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//baitiao.jd.com">白条</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//bao.jd.com/">保险</a>
                            </li>
                            <li class="cate_menu_item" data-index="17" clstag="h|keycount|head|category_17a">
                                <a target="_blank" class="cate_menu_lk" href="//anzhuang.jd.com">安装</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//jdwx.jd.com">维修</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//cleanclean.jd.com">清洗</a>
                                <span class="cate_menu_line">/</span>
                                <a target="_blank" class="cate_menu_lk" href="//2.paipai.com/">二手</a>
                            </li>
                            <li class="cate_menu_item" data-index="18" clstag="h|keycount|head|category_18a">
                                <a target="_blank" class="cate_menu_lk" href="//imall.jd.com/">工业品</a>
                            </li>
                        </ul>

                    </div>

                </div>
                <div class="fs_col2">
                    <div id="J_focus" class="focus">
                        <div class="focus-slider">
                            <div class="focus-item__core skeleton-elementDark mod_lazyload">
                                <a href="">
                                    <img src="../assets/imgs/590x470.jpg" alt="">
                                </a>
                            </div>
                            <div class="focus-item__recommend">
                                <div class="recommend-item skeleton-elementDark">
                                    <a href="">
                                        <img src="../assets/imgs/49e1b9b189d43ba9.jpg" alt="">
                                    </a>
                                    
                                </div>
                                <div class="recommend-item skeleton-elementDark">
                                    <a href="">
                                        <img src="../assets/imgs/2837589028fb3a71.jpg" alt="">
                                    </a>
                                </div>
                                <div class="recommend-item skeleton-elementDark">
                                    <a href="">
                                        <img src="../assets/imgs/8bffc82c31114e62.jpg" alt="">
                                    </a>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div id="J_fs_col3" class="fs_col3">
                    <div id="J_user" class="J_user user mod_loading">
                        <div class="user_inner user_plus0">
                            <div>
                                <div class="J_user_avatar user_avatar">
                                    <a class="user_avatar_lk" href="//home.jd.com" target="_blank" clstag="h|keycount|head|login_01" aria-label="个人头像">
                                        <img src="data:image/png;base64,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">
                                    </a>
                                </div>
                                <div class="user_show" clstag="h|keycount|head|login_01">
                                    <a href="javascript:login(true);" class="user_tip">Hi~欢迎逛京东！</a>
                                    <p>
                                        <a href="javascript:login()" class="user_login">登录</a>&nbsp;|&nbsp;
                                        <a href="javascript:regist()" class="user_reg">注册</a>
                                    </p>
                                </div>
                            </div>
                            <div class="user_profit">
                                <a class="user_profit_lk" href="//xinren.jd.com/?channel=99" target="_blank" clstag="h|keycount|head|login_04">新人福利</a>
                                <a class="user_profit_lk user_profit_lk_plus" href="//plus.jd.com/index?flow_system=appicon&amp;flow_entrance=appicon3&amp;flow_channel=pc" target="_blank" clstag="h|keycount|head|login_03">PLUS会员</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="J_app">
            <div class="J_seckill">
                <div class="jd_container seckill__inner">
                    <a href="" class="seckill-countdown">
                        <div class="countdown-title">京东秒杀</div>
                        <div>
                            <div class="countdown-desc">
                                <strong>22:00</strong>
                                "点场 倒计时"
                            </div>
                            <span class="timmer countdown-main">
                                <span class="timmer__unit timmer__unit--hour">05</span>
                                <span class="timmer__unit timmer__unit--minute">28</span>
                                <span class="timmer__unit timmer__unit--second">08</span>
                            </span>
                        </div>
                    </a>
                    <div class="seckill-list">
                        <div class="slider">
                            <button class="slider_control slider_control_prev">
                                <i class="iconfont iconzuojiantou zuo"></i>
                            </button>
                            <div class="slider_list">
                                <a class="slider_item seckill-item slider_active" href="">
                                    <div class="lazyimg lazyimg_loaded seckill-item__image">
                                        <img class="lazyimg_img" src="../assets/imgs/e0a.jpg" alt="">
                                    </div>
                                    <h6 class="seckill-item__name">华为mate30 手机(5G/4G版可选)（白条12期免息0首付） 亮黑色 8GB+128GB全网通（5G版）</h6>
                                    <div class="seckill-item__price">
                                        <span class="price-miaosha">
                                            <i>￥</i>
                                             <span>35.00</span>
                                        </span>
                                        <span class="price-origin">
                                            <i>￥</i>
                                            <span>80.00</span>
                                        </span>

                                    </div>
                                </a>
                                <a class="slider_item seckill-item slider_active" href="">
                                    <div class="lazyimg lazyimg_loaded seckill-item__image">
                                        <img class="lazyimg_img" src="../assets/imgs/e0a.jpg" alt="">
                                    </div>
                                    <h6 class="seckill-item__name">华为mate30 手机(5G/4G版可选)（白条12期免息0首付） 亮黑色 8GB+128GB全网通（5G版）</h6>
                                    <div class="seckill-item__price">
                                        <span class="price-miaosha">
                                            <i>￥</i>
                                             <span>35.00</span>
                                        </span>
                                        <span class="price-origin">
                                            <i>￥</i>
                                            <span>80.00</span>
                                        </span>

                                    </div>
                                </a>
                                <a class="slider_item seckill-item slider_active" href="">
                                    <div class="lazyimg lazyimg_loaded seckill-item__image">
                                        <img class="lazyimg_img" src="../assets/imgs/e0a.jpg" alt="">
                                    </div>
                                    <h6 class="seckill-item__name">华为mate30 手机(5G/4G版可选)（白条12期免息0首付） 亮黑色 8GB+128GB全网通（5G版）</h6>
                                    <div class="seckill-item__price">
                                        <span class="price-miaosha">
                                            <i>￥</i>
                                             <span>35.00</span>
                                        </span>
                                        <span class="price-origin">
                                            <i>￥</i>
                                            <span>80.00</span>
                                        </span>

                                    </div>
                                </a>
                                <a class="slider_item seckill-item slider_active" href="">
                                    <div class="lazyimg lazyimg_loaded seckill-item__image">
                                        <img class="lazyimg_img" src="../assets/imgs/e0a.jpg" alt="">
                                    </div>
                                    <h6 class="seckill-item__name">华为mate30 手机(5G/4G版可选)（白条12期免息0首付） 亮黑色 8GB+128GB全网通（5G版）</h6>
                                    <div class="seckill-item__price">
                                        <span class="price-miaosha">
                                            <i>￥</i>
                                             <span>35.00</span>
                                        </span>
                                        <span class="price-origin">
                                            <i>￥</i>
                                            <span>80.00</span>
                                        </span>

                                    </div>
                                </a>
                            </div>
                            <button class="slider_control slider_control_next">
                                <i class="iconfont iconyoujiantou-copy zuo"></i>
                            </button>
                        </div>
                    </div>
                    <div class="seckill-brand">
                        <div class="slider seckill-brand__slider">
                            <div class="slider_list">
                                <div class="slider_wrapper">
                                    <a class="slider_item brand-item" href="">
                                        <div class="item-image">
                                            <div class="lazyimg lazyimg_loaded">
                                                <img class="lazyimg_img" src="../assets/imgs/acf.png" alt="">
                                            </div>
                                        </div>
                                        <div class="item-info">
                                            <div class="item-info">
                                                <p class="item-info-title">Apple品类秒杀</p>
                                                <p class="item-info-promo">Mac低至7099元</p>
                                                <div class="item-info-action">
                                                    品类秒杀
                                                </div>
                                            </div>
                                        </div>

                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="J_spec">
                <div id="J_spec1" class="core1 jd_container floor">
                    <div class="grid_c1 core1_inner box2">
                        <div id="J_special_offer" class="box special_offer grid_c2">
                            <div class="box_hd">
                                <a class="box_hd_lk" href="">
                                    <h3 class="box_tit">每日特价</h3>
                                    <i class="box_hd_arrow"></i>
                                </a>
                            </div>
                            <div class="box_bd">
                                <div class="special_inner">
                                    <div class="tab special_tab">
                                        <div class="tab_head">
                                            <div class="tab_head_item active"><a class="special_tab_lk" href="">精选</a></div>
                                            <div class="tab_head_item"><a class="special_tab_lk" href="">精选</a></div>
                                            <div class="tab_head_item"><a class="special_tab_lk" href="">精选</a></div>
                                            <div class="tab_head_item"><a class="special_tab_lk" href="">精选</a></div>
                                            <div class="tab_head_item"><a class="special_tab_lk" href="">精选</a></div>
                                        </div>
                                        <div class="tab_body">
                                            <div class="tab_body_item">
                                                <div class="special_list">
                                                    <div class="special_item special_item_0">
                                                        <a class="special_item_lk" href="" aria-label="延时喷剂，不麻木姿势多 特价89 原价148">
                                                            <div class="lazyimg lazyimg_loaded special_item_img">
                                                                <img src="../assets/imgs/q70.jpg" alt="" class="lazyimg_img">
                                                            </div>
                                                            <div class="special_item_lowestFirst">189天最低价</div>
                                                            <div class="special_item_message">
                                                                <span class="special_item_name">延时喷剂，不麻木姿势多</span>
                                                                <div class="special_item_price">
                                                                    <span class="special_item_miaoShaPrice">
                                                                        <span class="dollar_txt">￥</span>80
                                                                    </span>
                                                                    <span class="special_item_jdPrice">
                                                                        <sapn class="dollar_txt">￥</sapn>148
                                                                    </span>
                                                                </div>
                                                                <span class="special_item_soldMsg">热卖中</span>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <div class="special_item special_item_1">
                                                        <a class="special_item_lk" href="">
                                                            <div class="lazyimg lazyimg_loaded special_item_img">
                                                                <img class="lazyimg_img" src="../assets/imgs/g1q70.jpg" alt="">
                                                            </div>
                                                            <span class="special_item_lowest">176天最低价</span>
                                                            <div class="special_item_message">
                                                                <span class="special_item_name">荣耀畅玩8A  极光蓝3G+32G
                                                                </span>
                                                                <div class="special_item_price">
                                                                    <span class="special_item_miaoShaPrice">
                                                                        <span class="dollar_txt">￥</span>699
                                                                    </span>
                                                                    <span class="special_item_jdPrice"><span class="dollar_txt">￥</span>1199</span>
                                                                </div>
                                                                <span class="special_item_soldMsg">热卖中
                                                                </span>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <div class="special_item special_item_2">
                                                        <a class="special_item_lk" href="">
                                                            <div class="lazyimg lazyimg_loaded special_item_img">
                                                                <img class="lazyimg_img" src="../assets/imgs/g1q70.jpg" alt="">
                                                            </div>
                                                            <span class="special_item_lowest">176天最低价</span>
                                                            <div class="special_item_message">
                                                                <span class="special_item_name">荣耀畅玩8A  极光蓝3G+32G
                                                                </span>
                                                                <div class="special_item_price">
                                                                    <span class="special_item_miaoShaPrice">
                                                                        <span class="dollar_txt">￥</span>699
                                                                    </span>
                                                                    <span class="special_item_jdPrice"><span class="dollar_txt">￥</span>1199</span>
                                                                </div>
                                                                <span class="special_item_soldMsg">热卖中
                                                                </span>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <div class="special_item special_item_3">
                                                        <a class="special_item_lk" href="">
                                                            <div class="lazyimg lazyimg_loaded special_item_img">
                                                                <img class="lazyimg_img" src="../assets/imgs/g1q70.jpg" alt="">
                                                            </div>
                                                            <span class="special_item_lowest">176天最低价</span>
                                                            <div class="special_item_message">
                                                                <span class="special_item_name">荣耀畅玩8A  极光蓝3G+32G
                                                                </span>
                                                                <div class="special_item_price">
                                                                    <span class="special_item_miaoShaPrice">
                                                                        <span class="dollar_txt">￥</span>699
                                                                    </span>
                                                                    <span class="special_item_jdPrice"><span class="dollar_txt">￥</span>1199</span>
                                                                </div>
                                                                <span class="special_item_soldMsg">热卖中
                                                                </span>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <div class="special_item special_item_4">
                                                        <a class="special_item_lk" href="">
                                                            <div class="lazyimg lazyimg_loaded special_item_img">
                                                                <img class="lazyimg_img" src="../assets/imgs/g1q70.jpg" alt="">
                                                            </div>
                                                            <span class="special_item_lowest">176天最低价</span>
                                                            <div class="special_item_message">
                                                                <span class="special_item_name">荣耀畅玩8A  极光蓝3G+32G
                                                                </span>
                                                                <div class="special_item_price">
                                                                    <span class="special_item_miaoShaPrice">
                                                                        <span class="dollar_txt">￥</span>699
                                                                    </span>
                                                                    <span class="special_item_jdPrice"><span class="dollar_txt">￥</span>1199</span>
                                                                </div>
                                                                <span class="special_item_soldMsg">热卖中
                                                                </span>
                                                            </div>
                                                        </a>
                                                    </div>

                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                        <div id="J_lightning_buy" class="box lightning-buy grid_c2 box_last">
                            <div class="box_hd">
                                <a class="box_hd_lk" href="">
                                    <h3 class="box_tit">品牌闪购</h3>
                                    <i class="box_hd_arrow"></i>
                                </a>
                            </div>
                            <div class="box_bd">
                                <div class="lightning-buy__container">
                                    <a class="goods-core goods-core__1" href="">
                                        <img class="core-logo" src="../assets/imgs/beef.png" alt="">
                                        <h6 class="core-name">三星手机专场</h6>
                                        <div class="core-desc">
                                            <span class="core-desc__promo">全场最高直降5889元</span>
                                            <span class="core-desc__extra">
                                                <span class="extra-text">仅剩</span>
                                                <div class="extra-day">
                                                    <span>2</span>
                                                    天
                                                </div>
                                            </span>

                                        </div>

                                        <img class="core-goods" src="../assets/imgs/ac.jpg" alt=""/>


                                    </a>
                                    <div class="goods-others">
                                        <a class="other-item" href="">
                                            <div class="other-item__logo">
                                                <img src="../assets/imgs/f339d0.png" alt="">
                                            </div>
                                            <h6 class="other-item__name">品牌钟表闪购专场</h6>
                                        </a>
                                        <a class="other-item" href="">
                                            <div class="other-item__logo">
                                                <img src="../assets/imgs/f339d0.png" alt="">
                                            </div>
                                            <h6 class="other-item__name">品牌钟表闪购专场</h6>
                                        </a>
                                        <a class="other-item" href="">
                                            <div class="other-item__logo">
                                                <img src="../assets/imgs/f339d0.png" alt="">
                                            </div>
                                            <h6 class="other-item__name">品牌钟表闪购专场</h6>
                                        </a>
                                        <a class="other-item" href="">
                                            <div class="other-item__logo">
                                                <img src="../assets/imgs/f339d0.png" alt="">
                                            </div>
                                            <h6 class="other-item__name">品牌钟表闪购专场</h6>
                                        </a>
                                        <a class="other-item" href="">
                                            <div class="other-item__logo">
                                                <img src="../assets/imgs/f339d0.png" alt="">
                                            </div>
                                            <h6 class="other-item__name">品牌钟表闪购专场</h6>
                                        </a>
                                        <a class="other-item" href="">
                                            <div class="other-item__logo">
                                                <img src="../assets/imgs/f339d0.png" alt="">
                                            </div>
                                            <h6 class="other-item__name">品牌钟表闪购专场</h6>
                                        </a>
                                    </div>
                                </div>
                            </div>



                        </div>
                    </div>

                </div>
                <div id="J_niceGoods">
                    <div class="jd_container nice-goods">
                        <a class="nice-goods__logo nice-goods__logo--bg-2" href="">
                            <div class="logo-container">
                                <div class="logo-text">探索新生活
                                    <i></i>
                                </div>
                            </div>
                        </a>
                        <div class="nice-goods__recommends"></div>
                    </div>

                </div>
            </div>
        </div>
<!--        <div>-->
<!--            <img class="hgft" src="../assets/imgs/acf.png" alt="" style="margin: 0 auto; display: inline-block; width: 100%;">-->
<!--            <span >gklsdml</span>-->
<!--        </div>-->

    </div>
"},null]}